#pragma warning(disable:4996)
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

typedef struct TreeNode {
    int data;
    struct TreeNode *left, *right;
}TreeNode;
TreeNode* makeNode(int size, TreeNode *left, TreeNode *right) {
    TreeNode *node = (TreeNode*)malloc(sizeof(TreeNode));
    node->data = size;
    node->left = left;
    node->right = right;

    return node;
}
void folderSize(TreeNode *root) {
    printf("%d ", root->data);   //자기자신출력
    if (root->left) // == root->left!=NULL
        printf("%d ", root->left->data);
    if (root->right) // == root->right!=NULL
        printf("%d", root->right->data);

}
int main() {
    TreeNode* F4 = makeNode(70, NULL, NULL);    //자신, 왼쪽, 오른쪽 순으로 출력
    TreeNode* F5 = makeNode(90, NULL, NULL);
    TreeNode* F7 = makeNode(130, NULL, NULL);
    TreeNode* F8 = makeNode(80, NULL, NULL);
    TreeNode* F2 = makeNode(30, F4, F5);
    TreeNode* F6 = makeNode(120, F7, F8);
    TreeNode* F3 = makeNode(50, NULL, F6);
    TreeNode* F1 = makeNode(20, F2, F3);

    int num;
    scanf("%d", &num);      //address num
    switch (num) {
    case 1:
        folderSize(F1);
        break;
    case 2:
        folderSize(F2);
        break;
    case 3:
        folderSize(F3);
        break;
    case 4:
        folderSize(F4);
        break;
    case 5:
        folderSize(F5);
        break;
    case 6:
        folderSize(F6);
        break;
    case 7:
        folderSize(F7);
        break;
    case 8:
        folderSize(F8);
        break;
    default:
        printf("-1");
    }

    return 0;
}
